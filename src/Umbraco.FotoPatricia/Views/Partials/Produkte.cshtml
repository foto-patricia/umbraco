@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<System.Collections.Generic.List<ContentModels.Produkt>>;

@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@using System;
@using System.Linq;

<div class="dark:bg-black py-16">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="isolate mx-auto grid max-w-md grid-cols-1 gap-y-8 lg:mx-0 lg:max-w-none lg:grid-cols-3">

@{
    foreach (var content in Model)
    {
        var index = Model.IndexOf(content);
        
        var additionalClass = index switch
        {
            var i when (i % 3  == 0 && i == Model.Count - 1) => "",
            var i when (i % 3  != 0 && i == Model.Count - 1) || (i + 1) % 3 == 0 => "lg:rounded-l-none",
            0 => "lg:rounded-r-none",
            _ => "lg:rounded-none"
        };
        
        <div class="flex flex-col justify-between rounded-3xl p-8 ring-1 ring-gray-200 bg-white dark:bg-gray-700 xl:p-10 @additionalClass">
            <div class="flex items-center justify-between gap-x-4">
                
            @if(content.IsFavorite)
            {
                <h3 class="text-2xl font-semibold leading-8 text-cyan-500 dark:text-cyan-200">@content.ProductName</h3>
                <span class="rounded-full inline-block bg-cyan-500/10 dark:bg-cyan-100/10 py-1 px-2.5 text-xs font-semibold leading-5 text-cyan-600 dark:text-cyan-200">Favorit</span>
            }
            else
            {
                <h3 class="text-2xl font-semibold leading-8 text-cyan-500 dark:text-cyan-200">@content.ProductName</h3>
            }
            
            </div>
            
            <p class="mt-6 flex items-baseline gap-x-1">
                <span class="text-4xl font-bold tracking-tight text-gray-900 dark:text-gray-200">CHF @(content.Price).-</span>
            </p>
            
            <ul role="list" class="w-auto mt-8 mx-0 space-y-3 text-sm leading-6 text-gray-600 dark:text-gray-100">
            @{
                var lines = content.ProductDescription.Split(Environment.NewLine, StringSplitOptions.RemoveEmptyEntries).ToList();
                var optionals = content.Optional.Split(Environment.NewLine, StringSplitOptions.RemoveEmptyEntries).ToList();
            }
            
            @foreach(var line in lines)
            {
                <li class="flex gap-x-3">
                  <svg class="h-6 w-5 flex-none text-cyan-500 dark:text-cyan-200" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z" clip-rule="evenodd" />
                  </svg>
                  @line
                </li>
            }
            </ul>
            
            @if(optionals.Any()) 
            {
                <ul role="list" class="w-auto mt-8 mx-0 space-y-3 text-sm leading-6 text-gray-600 dark:text-gray-100">
                @foreach(var line in optionals)
                {
                    <li class="flex gap-x-3">
                      <svg class="h-6 w-6 flex-none text-cyan-600 dark:text-cyan-200" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      
                      @line
                    </li>
                }
                </ul>
            }
        </div>
    }
}
    </div>
  </div>
</div>