@using Umbraco.Cms.Web.Common.PublishedModels;
@using System.Linq;
@using System.Collections.Generic;
@using Umbraco.Cms.Core.Models;
@using Umbraco.Cms.Core.Models.Blocks;
@using Umbraco.Cms.Core.Models.PublishedContent;
@using Umbraco.Extensions;
@using Newtonsoft.Json;
@using Umbraco.FotoPatricia.Models;

@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "Layout.cshtml";
	var heroImage = Model.Value<MediaWithCrops>("heroImage");
	var galleryImages = Model.Value<List<MediaWithCrops>>("gallery");
    
    var produkte = Model
        .Value<IEnumerable<BlockListItem>>("produkte")
        .Select(bli => (ContentModels.Produkt)bli.Content)
        .ToList();
        
    var products = produkte
        .Select(p => new ProductOrderModel{Name = p.ProductName, Price = p.Price})
        .ToList();
}

<!-- Hero section -->
<div id="hero" class="relative">
    <div class="hero-image-wrapper w-full h-64 lg:h-96 xl:h-128">
        <div class="md:hidden hero-image bg-fixed bg-contain w-full h-64" 
            style="background-image:url(@heroImage.GetCropUrl(cropAlias: "square", useCropDimensions: true, urlMode: UrlMode.Default, furtherOptions:"&format=WebP"))">
        </div>
        
        <div class="hidden md:block hero-image bg-fixed bg-contain w-full h-64 lg:h-96 xl:h-128" 
            style="background-image:url(@heroImage.GetCropUrl(cropAlias: "hero", useCropDimensions: true, urlMode: UrlMode.Default, furtherOptions:"&format=WebP"))">
        </div>
    </div>

    <div class="absolute inset-0">
        <div class="flex items-center justify-center h-full">
            <div class="backdrop-filter backdrop-blur-md bg-opacity-25 bg-white rounded-full">
                <h1 class="text-white opacity-80 drop-shadow-lg text-4xl md:text-6xl font-bold my-4 mx-8">@Model.Value("title")</h1>
            </div>
        </div>
    </div>
</div>

<!-- Product Order Validation Result -->
@if(!ViewData.ModelState.IsValid)
{
    <div
      class="pointer-events-auto mx-auto mb-4 hidden w-96 max-w-full rounded-lg bg-danger-100 bg-clip-padding text-sm text-danger-700 shadow-lg shadow-black/5 data-[te-toast-show]:block data-[te-toast-hide]:hidden"
      id="static-example"
      role="alert"
      aria-live="assertive"
      aria-atomic="true"
      data-te-autohide="false"
      data-te-toast-init
      data-te-toast-show>
      <div
        class="flex items-center justify-between rounded-t-lg border-b-2 border-danger-200 bg-danger-100 bg-clip-padding px-4 pb-2 pt-2.5 text-danger-700">
        <p class="flex items-center font-bold text-danger-700">
          <svg
            aria-hidden="true"
            focusable="false"
            data-prefix="fas"
            data-icon="times-circle"
            class="mr-2 h-4 w-4 fill-current"
            role="img"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 512 512">
            <path
              fill="currentColor"
              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"></path>
          </svg>
          Nicht gebucht!
        </p>
        <div class="flex items-center">
          <button
            type="button"
            class="ml-2 box-content rounded-none border-none opacity-80 hover:no-underline hover:opacity-75 focus:opacity-100 focus:shadow-none focus:outline-none"
            data-te-toast-dismiss
            aria-label="Close">
            <span
              class="w-[1em] focus:opacity-100 disabled:pointer-events-none disabled:select-none disabled:opacity-25 [&.disabled]:pointer-events-none [&.disabled]:select-none [&.disabled]:opacity-25">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="h-6 w-6">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M6 18L18 6M6 6l12 12" />
              </svg>
            </span>
          </button>
        </div>
      </div>
      <div
        class="break-words rounded-b-lg bg-danger-100 px-4 py-4 text-danger-700">
        @Html.ValidationSummary()
      </div>
    </div>
}

@if(TempData.ContainsKey("IsSuccess") && ((bool)TempData["IsSuccess"]))
{
    <div
      class="pointer-events-auto mx-auto mb-4 hidden w-96 max-w-full rounded-lg bg-success-100 bg-clip-padding text-sm text-success-700 shadow-lg shadow-black/5 data-[te-toast-show]:block data-[te-toast-hide]:hidden"
      id="static-example"
      role="alert"
      aria-live="assertive"
      aria-atomic="true"
      data-te-autohide="false"
      data-te-toast-init
      data-te-toast-show>
      <div
        class="flex items-center justify-between rounded-t-lg border-b-2 border-success/20 bg-success-100 bg-clip-padding px-4 pb-2 pt-2.5">
        <p class="flex items-center font-bold text-success-700">
          <svg
            aria-hidden="true"
            focusable="false"
            data-prefix="fas"
            data-icon="check-circle"
            class="mr-2 h-4 w-4 fill-current"
            role="img"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 512 512">
            <path
              fill="currentColor"
              d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"></path>
          </svg>
          Buchung gesendet
        </p>
        <div class="flex items-center">
          <button
            type="button"
            class="ml-2 box-content rounded-none border-none opacity-80 hover:no-underline hover:opacity-75 focus:opacity-100 focus:shadow-none focus:outline-none"
            data-te-toast-dismiss
            aria-label="Close">
            <span
              class="w-[1em] focus:opacity-100 disabled:pointer-events-none disabled:select-none disabled:opacity-25 [&.disabled]:pointer-events-none [&.disabled]:select-none [&.disabled]:opacity-25">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="h-6 w-6">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M6 18L18 6M6 6l12 12" />
              </svg>
            </span>
          </button>
        </div>
      </div>
      <div
        class="break-words rounded-b-lg bg-success-100 px-4 py-4 text-success-700">
        Ihre Buchung wurde erfolgreich gesendet. Sie wird so bald wie möglich verarbeitet.
      </div>
    </div>
}
<!-- -->

<!-- Richt text content body -->
<div class="my-16 w-full mx-2 md:w-3/4 md:mx-auto">
    @Model.Value("body")
</div>

<!-- Image Gallery -->
<section id="imageGallery" class="overflow-hidden text-neutral-700 bg-gray-100">
  <div class="container mx-auto px-5 py-4 lg:px-32 lg:py-16">
    <div class="-m-1 flex flex-wrap md:-m-2">
        
    @for(var i = 0; i < galleryImages.Count; i += 6)
    {
        <div class="flex w-1/2 flex-wrap">
            @for(var j=0; j < Math.Min(3, galleryImages.Count - i); j++)
            {
                // @item.GetCropUrl(cropAlias: "preview", useCropDimensions: true, urlMode: UrlMode.Default, furtherOptions:"&format=WebP")
                var item = galleryImages[i+j];
                @if(j < 2)
                {
                    <a class="w-1/2 p-1 md:p-2" data-fslightbox href="@item.Url()">
                      <slimsy-picture
                        width="500"
                        height="500"
                        media-item="@item" 
                        css-class="block h-full w-full rounded-lg object-cover object-center"
                        render-lqip="true" 
                        render-webp-alternative="true">
                      </slimsy-picture>
                    </a>
                }
                else
                {
                    <a class="w-full p-1 md:p-2" data-fslightbox href="@item.Url()">
                      <slimsy-picture
                        width="500"
                        height="500"
                        media-item="@item" 
                        css-class="block h-full w-full rounded-lg object-cover object-center"
                        render-lqip="true" 
                        render-webp-alternative="true">
                      </slimsy-picture>
                    </a>
                }
            }
        </div>
        @if(galleryImages.Count > i + 3)
        {
            <div class="flex w-1/2 flex-wrap">
              
            @for(var j=0; j < Math.Min(3, galleryImages.Count - i - 3); j++)
            {
                var item = galleryImages [i+j+3];
                @if(j > 0)
                {
                <a class="w-1/2 p-1 md:p-2" data-fslightbox href="@item.Url()">
                      <slimsy-picture
                        width="500"
                        height="500"
                        media-item="@item" 
                        css-class="block h-full w-full rounded-lg object-cover object-center"
                        render-lqip="true" 
                        render-webp-alternative="true">
                      </slimsy-picture>
                    </a>
                }
                else
                {
                <a class="w-full p-1 md:p-2" data-fslightbox href="@item.Url()">
                    
                      <slimsy-picture
                        width="500"
                        height="500"
                        media-item="@item" 
                        css-class="block h-full w-full rounded-lg object-cover object-center"
                        render-lqip="true" 
                        render-webp-alternative="true">
                      </slimsy-picture>
                    </a>
                }
            }
            </div>
        }
    }
    </div>
  </div>
</section>

<!-- Produkte -->
@Html.Partial("Produkte", produkte)

<div class="mb-16 whitespace-normal w-full mx-8 md:w-3/4 md:mx-auto lg:w-1/2">
@Model.Value("produktErlaeuterung")
</div>

@await Html.PartialAsync("ProductOrderForm", new ProductOrderViewModel(products))

@section EndOfBody
{
    <script src="https://unpkg.com/fslightbox@3.4.1/index.js"></script>
}